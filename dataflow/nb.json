{
	"name": "nb",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "emp_sal_csv",
						"type": "DatasetReference"
					},
					"name": "empsal"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "dataset_ouput_folder",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "depttotalsalary"
				},
				{
					"name": "join1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          emp_id as string,",
				"          Name as string,",
				"          Salary as integer,",
				"          department_name as string,",
				"          country_id as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> empsal",
				"empsal select(mapColumn(",
				"          emp_id,",
				"          Name,",
				"          Salary,",
				"          department_name,",
				"          country_id",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"empsal aggregate(groupBy(department_name),",
				"     Dept_Total_Sal = sum(Salary)) ~> depttotalsalary",
				"select1, depttotalsalary join(select1@department_name == depttotalsalary@department_name,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 derive(Percent_Alloc = round(100*(Salary/Dept_Total_Sal),2)) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          DEPARTMENT_ID as string,",
				"          DEPARTMENT_NAME as string",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}